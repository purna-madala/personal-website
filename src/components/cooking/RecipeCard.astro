---
export interface Props {
  title: string;
  description: string;
  href: string;
  heroImage?: string;
  difficulty?: 'easy' | 'medium' | 'hard';
  prepTime?: number;
  cookTime?: number;
  servings?: number;
  cuisine?: string;
  tags?: string[];
}

const { 
  title, 
  description, 
  href, 
  heroImage, 
  difficulty, 
  prepTime, 
  cookTime, 
  servings, 
  cuisine, 
  tags = [] 
} = Astro.props;

const totalTime = (prepTime || 0) + (cookTime || 0);
---

<article class="recipe-card">
  <a href={href} class="recipe-link">
    {heroImage && (
      <div class="recipe-image">
        <img src={heroImage} alt={title} loading="lazy" />
        {difficulty && (
          <span class={`difficulty-badge difficulty-${difficulty}`}>
            {difficulty}
          </span>
        )}
      </div>
    )}
    
    <div class="recipe-content">
      <h3 class="recipe-title">{title}</h3>
      <p class="recipe-description">{description}</p>
      
      <div class="recipe-meta">
        {totalTime > 0 && (
          <div class="meta-item">
            <svg class="meta-icon" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V5z" clip-rule="evenodd"/>
            </svg>
            <span>{totalTime}m</span>
          </div>
        )}
        
        {servings && (
          <div class="meta-item">
            <svg class="meta-icon" viewBox="0 0 20 20" fill="currentColor">
              <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
            <span>{servings} servings</span>
          </div>
        )}
        
        {cuisine && (
          <div class="meta-item">
            <span class="cuisine-tag">{cuisine}</span>
          </div>
        )}
      </div>
    </div>
  </a>
</article>

<style>
  .recipe-card {
    background-color: var(--color-background);
    border: var(--border-width) solid var(--color-border-light);
    border-radius: var(--border-radius-lg);
    overflow: hidden;
    transition: all var(--transition-normal);
    height: 100%;
  }
  
  .recipe-card:hover {
    border-color: var(--color-border);
    box-shadow: var(--shadow-md);
    transform: translateY(-2px);
  }
  
  .recipe-link {
    text-decoration: none;
    color: inherit;
    display: flex;
    flex-direction: column;
    height: 100%;
  }
  
  .recipe-image {
    position: relative;
    aspect-ratio: 16/10;
    overflow: hidden;
    background-color: var(--color-background-softer);
  }
  
  .recipe-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform var(--transition-slow);
  }
  
  .recipe-card:hover .recipe-image img {
    transform: scale(1.02);
  }
  
  .difficulty-badge {
    position: absolute;
    top: var(--space-md);
    right: var(--space-md);
    padding: var(--space-xs) var(--space-sm);
    border-radius: var(--border-radius-sm);
    font-size: var(--font-size-xs);
    font-weight: var(--font-weight-medium);
    text-transform: capitalize;
    color: white;
    backdrop-filter: blur(4px);
  }
  
  .difficulty-easy {
    background-color: var(--color-success);
  }
  
  .difficulty-medium {
    background-color: var(--color-warning);
  }
  
  .difficulty-hard {
    background-color: var(--color-error);
  }
  
  .recipe-content {
    padding: var(--space-lg);
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }
  
  .recipe-title {
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
    color: var(--color-text);
    margin-bottom: var(--space-sm);
    line-height: var(--line-height-tight);
  }
  
  .recipe-description {
    color: var(--color-text-light);
    font-size: var(--font-size-sm);
    line-height: var(--line-height-normal);
    margin-bottom: var(--space-md);
    flex-grow: 1;
  }
  
  .recipe-meta {
    display: flex;
    align-items: center;
    gap: var(--space-md);
    flex-wrap: wrap;
    margin-top: auto;
  }
  
  .meta-item {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    color: var(--color-text-light);
    font-size: var(--font-size-xs);
    font-weight: var(--font-weight-medium);
  }
  
  .meta-icon {
    width: 16px;
    height: 16px;
    flex-shrink: 0;
  }
  
  .cuisine-tag {
    padding: var(--space-xs) var(--space-sm);
    background-color: var(--color-background-soft);
    color: var(--color-text);
    border-radius: var(--border-radius-sm);
    font-size: var(--font-size-xs);
    font-weight: var(--font-weight-medium);
    border: var(--border-width) solid var(--color-border-light);
  }
  
  @media (max-width: 640px) {
    .recipe-content {
      padding: var(--space-md);
    }
    
    .recipe-meta {
      gap: var(--space-sm);
    }
    
    .meta-item {
      font-size: var(--font-size-xs);
    }
  }
</style> 