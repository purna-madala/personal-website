---
import BaseHead from '../../../components/BaseHead.astro';
import Header from '../../../components/Header.astro';
import Footer from '../../../components/Footer.astro';
import CategoryFilter from '../../../components/blog/CategoryFilter.astro';
import RecipeCard from '../../../components/cooking/RecipeCard.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../../consts';
import { getCollection } from 'astro:content';

const cookingPosts = (await getCollection('cooking')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const featuredRecipes = cookingPosts.filter(post => post.data.featured);
const regularRecipes = cookingPosts.filter(post => !post.data.featured);

// Group recipes by cuisine for better organization
const cuisines = [...new Set(cookingPosts.map(post => post.data.cuisine).filter(Boolean))];
const difficulties = ['easy', 'medium', 'hard'];
const mealTypes = [...new Set(cookingPosts.map(post => post.data.mealType).filter(Boolean))];
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={`Cooking Blog - ${SITE_TITLE}`} description="Delicious recipes, cooking tips, and culinary adventures" />
		<style>
			/* Force Light Mode Only */
			:root {
				color-scheme: light only;
			}
			
			html {
				background: white;
				color: #111827;
			}
			
			body {
				background: white;
				color: #111827;
			}

			/* Background Animation */
			.background-animation {
				position: fixed;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				pointer-events: none;
				z-index: -1;
				overflow: hidden;
			}
			
			.floating-shapes {
				position: relative;
				width: 100%;
				height: 100%;
			}
			
			.shape {
				position: absolute;
				border-radius: 50%;
				background: linear-gradient(135deg, #10b981, #059669);
				opacity: 0.08;
				animation: float 8s ease-in-out infinite;
			}
			
			.shape-1 {
				width: 100px;
				height: 100px;
				top: 15%;
				left: 5%;
				animation-delay: 0s;
			}
			
			.shape-2 {
				width: 80px;
				height: 80px;
				top: 60%;
				right: 15%;
				animation-delay: 2s;
				background: linear-gradient(135deg, #8b5cf6, #7c3aed);
			}
			
			.shape-3 {
				width: 120px;
				height: 120px;
				top: 35%;
				left: 85%;
				animation-delay: 4s;
				background: linear-gradient(135deg, #3b82f6, #2563eb);
			}
			
			.shape-4 {
				width: 60px;
				height: 60px;
				top: 85%;
				left: 25%;
				animation-delay: 1s;
			}
			
			.shape-5 {
				width: 90px;
				height: 90px;
				top: 10%;
				right: 25%;
				animation-delay: 3s;
				background: linear-gradient(135deg, #8b5cf6, #7c3aed);
			}

			/* Main Layout */
			.main {
				min-height: 100vh;
			}

			/* Hero Section */
			.hero {
				padding: 80px 0 100px;
				background: 
					radial-gradient(circle at 25% 40%, rgba(5, 150, 105, 0.1) 0%, transparent 50%),
					radial-gradient(circle at 75% 20%, rgba(16, 185, 129, 0.08) 0%, transparent 50%),
					radial-gradient(circle at 50% 80%, rgba(6, 78, 59, 0.06) 0%, transparent 50%);
				position: relative;
				overflow: hidden;
			}
			
			.hero::before {
				content: '';
				position: absolute;
				top: 0;
				left: 0;
				right: 0;
				bottom: 0;
				background: 
					linear-gradient(135deg, rgba(255,255,255,0.1) 0%, transparent 50%),
					linear-gradient(45deg, transparent 50%, rgba(255,255,255,0.05) 100%);
				pointer-events: none;
			}
			
			.hero .container {
				display: grid;
				grid-template-columns: 1fr;
				gap: 48px;
				align-items: center;
				position: relative;
				z-index: 1;
			}
			
			@media (min-width: 1024px) {
				.hero .container {
					grid-template-columns: 1fr 1fr;
					gap: 64px;
				}
			}
			
			.hero-content {
				text-align: center;
			}
			
			@media (min-width: 1024px) {
				.hero-content {
					text-align: left;
				}
			}
			
			.hero-badge {
				display: inline-flex;
				align-items: center;
				gap: 8px;
				padding: 8px 16px;
				background: rgba(255, 255, 255, 0.9);
				border: 1px solid rgba(16, 185, 129, 0.2);
				border-radius: 50px;
				font-size: 14px;
				font-weight: 500;
				color: #059669;
				margin-bottom: 24px;
				backdrop-filter: blur(10px);
				box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
			}
			
			.badge-icon {
				font-size: 16px;
			}
			
			.hero-title {
				font-size: clamp(2.5rem, 8vw, 4.5rem);
				font-weight: 800;
				line-height: 1.1;
				margin-bottom: 24px;
				letter-spacing: -0.025em;
			}
			
			.text-gradient {
				background: linear-gradient(135deg, #10b981, #059669);
				-webkit-background-clip: text;
				-webkit-text-fill-color: transparent;
				background-clip: text;
			}
			
			.hero-description {
				font-size: 20px;
				line-height: 1.6;
				color: #6b7280;
				margin-bottom: 32px;
				max-width: 600px;
			}
			
			@media (min-width: 1024px) {
				.hero-description {
					max-width: none;
				}
			}
			
			.hero-stats {
				display: flex;
				justify-content: center;
				gap: 24px;
				margin-bottom: 40px;
				flex-wrap: wrap;
			}
			
			@media (min-width: 1024px) {
				.hero-stats {
					justify-content: flex-start;
				}
			}
			
			.stat {
				text-align: center;
				min-width: 80px;
			}
			
			.stat-number {
				font-size: 24px;
				font-weight: 700;
				color: #059669;
				margin-bottom: 4px;
			}
			
			.stat-label {
				font-size: 12px;
				color: #9ca3af;
				font-weight: 500;
				text-transform: uppercase;
				letter-spacing: 0.05em;
			}
			
			.hero-actions {
				display: flex;
				gap: 16px;
				justify-content: center;
			}
			
			@media (min-width: 1024px) {
				.hero-actions {
					justify-content: flex-start;
				}
			}
			
			@media (max-width: 640px) {
				.hero-actions {
					flex-direction: column;
					align-items: center;
				}
			}

			/* Hero Visual */
			.hero-visual {
				display: flex;
				justify-content: center;
				align-items: center;
				position: relative;
			}
			
			.recipe-showcase {
				position: relative;
				width: 100%;
				max-width: 400px;
			}
			
			.recipe-card-preview {
				background: white;
				border-radius: 20px;
				box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
				overflow: hidden;
				position: relative;
				z-index: 2;
			}
			
			.recipe-image-placeholder {
				height: 200px;
				background: linear-gradient(135deg, #fef3c7, #fbbf24, #f59e0b);
				display: flex;
				align-items: center;
				justify-content: center;
				position: relative;
			}
			
			.recipe-icon {
				font-size: 4rem;
				filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1));
			}
			
			.recipe-details {
				padding: 24px;
			}
			
			.recipe-name {
				font-size: 24px;
				font-weight: 700;
				color: #111827;
				margin-bottom: 16px;
				line-height: 1.2;
			}
			
			.recipe-tags {
				display: flex;
				gap: 8px;
				margin-bottom: 16px;
			}
			
			.tag {
				padding: 4px 12px;
				border-radius: 50px;
				font-size: 12px;
				font-weight: 600;
				text-transform: capitalize;
			}
			
			.tag.featured {
				background: rgba(251, 191, 36, 0.9);
				color: white;
			}
			
			.tag.difficulty {
				background: rgba(34, 197, 94, 0.9);
				color: white;
			}
			
			.recipe-info {
				display: flex;
				flex-direction: column;
				gap: 12px;
			}
			
			.info-item {
				display: flex;
				align-items: center;
				gap: 8px;
				font-size: 14px;
				color: #6b7280;
			}
			
			.info-item .icon {
				font-size: 16px;
			}
			
			.floating-ingredients {
				position: absolute;
				top: 0;
				left: 0;
				right: 0;
				bottom: 0;
				pointer-events: none;
				z-index: 1;
			}
			
			.ingredient {
				position: absolute;
				font-size: 2rem;
				animation: float 6s ease-in-out infinite;
				opacity: 0.8;
			}
			
			.ingredient:nth-child(1) {
				top: 10%;
				left: -10%;
				animation-delay: 0s;
			}
			
			.ingredient:nth-child(2) {
				top: 60%;
				right: -15%;
				animation-delay: 1.5s;
			}
			
			.ingredient:nth-child(3) {
				bottom: 20%;
				left: -5%;
				animation-delay: 3s;
			}
			
			.ingredient:nth-child(4) {
				top: 25%;
				right: -10%;
				animation-delay: 4.5s;
			}

			/* Filter Section */
			.filters {
				padding: 64px 0;
				background: #f9fafb;
				border-top: 1px solid #e5e7eb;
				border-bottom: 1px solid #e5e7eb;
			}
			
			.filter-group {
				margin-bottom: 32px;
			}
			
			.filter-group:last-child {
				margin-bottom: 0;
			}
			
			.filter-title {
				font-size: 18px;
				font-weight: 600;
				margin-bottom: 16px;
				color: #111827;
			}
			
			.filter-tags {
				display: flex;
				gap: 8px;
				flex-wrap: wrap;
			}
			
			.filter-tag {
				padding: 8px 16px;
				border-radius: 50px;
				font-size: 14px;
				font-weight: 500;
				cursor: pointer;
				transition: all 0.2s ease;
				text-transform: capitalize;
			}
			
			.cuisine-tag {
				background: rgba(16, 185, 129, 0.1);
				color: #059669;
				border: 1px solid rgba(16, 185, 129, 0.2);
			}
			
			.cuisine-tag:hover {
				background: rgba(16, 185, 129, 0.2);
				border-color: #059669;
			}
			
			.meal-tag {
				background: rgba(37, 99, 235, 0.1);
				color: #2563eb;
				border: 1px solid rgba(37, 99, 235, 0.2);
			}
			
			.meal-tag:hover {
				background: rgba(37, 99, 235, 0.2);
				border-color: #2563eb;
			}
			
			.difficulty-tag {
				border: 1px solid transparent;
			}
			
			.difficulty-tag[data-difficulty="easy"] {
				background: rgba(34, 197, 94, 0.1);
				color: #059669;
				border-color: rgba(34, 197, 94, 0.2);
			}
			
			.difficulty-tag[data-difficulty="medium"] {
				background: rgba(251, 191, 36, 0.1);
				color: #d97706;
				border-color: rgba(251, 191, 36, 0.2);
			}
			
			.difficulty-tag[data-difficulty="hard"] {
				background: rgba(239, 68, 68, 0.1);
				color: #dc2626;
				border-color: rgba(239, 68, 68, 0.2);
			}
			
			.difficulty-tag:hover {
				opacity: 0.8;
			}

			/* Section Styling */
			.featured,
			.all-recipes,
			.cta {
				padding: 80px 0;
			}
			
			.section-header {
				text-align: center;
				margin-bottom: 64px;
			}
			
			.section-title {
				font-size: 36px;
				font-weight: 700;
				margin-bottom: 16px;
				background: linear-gradient(135deg, #10b981, #059669);
				-webkit-background-clip: text;
				-webkit-text-fill-color: transparent;
				background-clip: text;
			}
			
			.section-description {
				font-size: 20px;
				color: #6b7280;
				max-width: 600px;
				margin: 0 auto;
			}

			/* Recipe Cards */
			.recipes-grid {
				display: grid;
				grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
				gap: 32px;
			}
			
			@media (max-width: 768px) {
				.recipes-grid {
					grid-template-columns: 1fr;
					gap: 24px;
				}
			}
			
			.recipe-card {
				height: 100%;
				overflow: hidden;
				transition: all 0.3s ease;
				border: 1px solid #e5e7eb;
				background: white;
				border-radius: 16px;
				box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
			}
			
			.recipe-card:hover {
				transform: translateY(-4px);
				box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
			}
			
			.recipe-link {
				display: flex;
				flex-direction: column;
				height: 100%;
				text-decoration: none;
				color: inherit;
			}
			
			.recipe-image {
				aspect-ratio: 16/10;
				overflow: hidden;
				position: relative;
				background: #f3f4f6;
			}
			
			.recipe-image img {
				width: 100%;
				height: 100%;
				object-fit: cover;
				transition: transform 0.5s ease;
			}
			
			.recipe-card:hover .recipe-image img {
				transform: scale(1.05);
			}
			
			.recipe-overlay {
				position: absolute;
				top: 16px;
				left: 16px;
				right: 16px;
			}
			
			.recipe-badges {
				display: flex;
				gap: 8px;
				flex-wrap: wrap;
			}
			
			.recipe-badge {
				padding: 4px 12px;
				border-radius: 50px;
				font-size: 12px;
				font-weight: 600;
				backdrop-filter: blur(10px);
				box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
				text-transform: capitalize;
			}
			
			.recipe-badge.featured {
				background: rgba(251, 191, 36, 0.9);
				color: white;
			}
			
			.recipe-badge.difficulty.easy {
				background: rgba(34, 197, 94, 0.9);
				color: white;
			}
			
			.recipe-badge.difficulty.medium {
				background: rgba(251, 191, 36, 0.9);
				color: white;
			}
			
			.recipe-badge.difficulty.hard {
				background: rgba(239, 68, 68, 0.9);
				color: white;
			}
			
			.recipe-badge.meal-type {
				background: rgba(37, 99, 235, 0.9);
				color: white;
			}
			
			.recipe-content {
				padding: 24px;
				flex-grow: 1;
				display: flex;
				flex-direction: column;
			}
			
			.recipe-title {
				font-size: 20px;
				font-weight: 700;
				margin-bottom: 12px;
				line-height: 1.3;
				color: #111827;
			}
			
			.recipe-description {
				color: #6b7280;
				line-height: 1.6;
				margin-bottom: 16px;
				flex-grow: 1;
			}
			
			.recipe-meta {
				display: flex;
				gap: 16px;
				flex-wrap: wrap;
				margin-top: auto;
			}
			
			.meta-item {
				display: flex;
				align-items: center;
				gap: 6px;
				font-size: 14px;
				color: #9ca3af;
			}
			
			.meta-item svg {
				width: 14px;
				height: 14px;
				opacity: 0.7;
			}
			
			.cuisine-flag {
				padding: 4px 8px;
				background: #f3f4f6;
				border-radius: 6px;
				font-size: 12px;
				font-weight: 500;
				color: #059669;
				text-transform: uppercase;
				letter-spacing: 0.05em;
			}

			/* Empty State */
			.empty-state {
				text-align: center;
				padding: 80px 16px;
				color: #9ca3af;
			}
			
			.empty-icon {
				font-size: 4rem;
				margin-bottom: 24px;
				opacity: 0.7;
			}
			
			.empty-title {
				font-size: 24px;
				font-weight: 700;
				margin-bottom: 16px;
				color: #6b7280;
			}
			
			.empty-description {
				font-size: 18px;
				line-height: 1.6;
				max-width: 500px;
				margin: 0 auto;
			}

			/* CTA Section */
			.cta {
				background: linear-gradient(135deg, #10b981, #059669);
				color: white;
				text-align: center;
				position: relative;
				overflow: hidden;
			}
			
			.cta::before {
				content: '';
				position: absolute;
				top: 0;
				left: 0;
				right: 0;
				bottom: 0;
				background: 
					radial-gradient(circle at 30% 20%, rgba(255,255,255,0.1) 0%, transparent 50%),
					radial-gradient(circle at 70% 80%, rgba(255,255,255,0.08) 0%, transparent 50%);
				pointer-events: none;
			}
			
			.cta-content {
				position: relative;
				z-index: 1;
				max-width: 800px;
				margin: 0 auto;
			}
			
			.cta-title {
				font-size: 36px;
				font-weight: 700;
				margin-bottom: 24px;
				color: white;
			}
			
			.cta-description {
				font-size: 20px;
				line-height: 1.6;
				margin-bottom: 32px;
				color: rgba(255, 255, 255, 0.9);
			}
			
			.cta .btn-primary {
				background: white;
				color: #059669;
			}
			
			.cta .btn-primary:hover {
				background: rgba(255, 255, 255, 0.95);
				color: #047857;
			}

			/* Animations */
			.animate-fade-in {
				animation: fadeIn 0.8s ease-out forwards;
				opacity: 0;
			}

			.animate-fade-in:nth-child(1) { animation-delay: 0.1s; }
			.animate-fade-in:nth-child(2) { animation-delay: 0.2s; }
			.animate-fade-in:nth-child(3) { animation-delay: 0.3s; }
			.animate-fade-in:nth-child(4) { animation-delay: 0.4s; }
			.animate-fade-in:nth-child(5) { animation-delay: 0.5s; }

			@keyframes fadeIn {
				from { opacity: 0; transform: translateY(20px); }
				to { opacity: 1; transform: translateY(0); }
			}

			@keyframes float {
				0%, 100% { transform: translateY(0px) rotate(0deg); }
				33% { transform: translateY(-10px) rotate(1deg); }
				66% { transform: translateY(5px) rotate(-1deg); }
			}

			/* Mobile Optimizations */
			@media (max-width: 768px) {
				.hero {
					padding: 64px 0 80px;
				}
				
				.hero-stats {
					gap: 16px;
				}
				
				.featured,
				.all-recipes,
				.cta {
					padding: 64px 0;
				}
				
				.filters {
					padding: 48px 0;
				}
				
				.section-header {
					margin-bottom: 48px;
				}
				
				.recipe-content {
					padding: 20px;
				}
				
				.filter-tags {
					gap: 6px;
				}
				
				.filter-tag {
					padding: 6px 12px;
					font-size: 12px;
				}
				
				.recipe-meta {
					gap: 12px;
				}
			}
			
			@media (max-width: 640px) {
				.hero-title {
					font-size: 2.5rem;
				}
				
				.hero-description {
					font-size: 18px;
				}
				
				.section-title {
					font-size: 28px;
				}
				
				.section-description {
					font-size: 18px;
				}
				
				.cta-title {
					font-size: 28px;
				}
				
				.cta-description {
					font-size: 18px;
				}
				
				.recipe-meta {
					flex-direction: column;
					gap: 8px;
				}
				
				.hero-stats {
					justify-content: center;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		
		<!-- Animated Background -->
		<div class="background-animation">
			<div class="floating-shapes">
				<div class="shape shape-1"></div>
				<div class="shape shape-2"></div>
				<div class="shape shape-3"></div>
				<div class="shape shape-4"></div>
				<div class="shape shape-5"></div>
			</div>
		</div>

		<main class="main">
			<CategoryFilter currentCategory="cooking" />
			
			<!-- Hero Section -->
			<section class="hero">
				<div class="container">
					<div class="hero-content">
						<div class="hero-badge animate-fade-in">
							<span class="badge-icon">👨‍🍳</span>
							<span>Culinary Adventures Await</span>
						</div>
						
						<h1 class="hero-title animate-fade-in">
							<span class="text-gradient">Cooking Blog</span>
						</h1>
						
						<p class="hero-description animate-fade-in">
							From kitchen experiments to <strong>family favorites</strong>, discover recipes that bring joy to your table. 
							Join me on a delicious journey through <em>flavors, techniques</em>, and culinary creativity.
						</p>
						
						{cookingPosts.length > 0 && (
							<div class="hero-stats animate-fade-in">
								<div class="stat">
									<div class="stat-number">{cookingPosts.length}</div>
									<div class="stat-label">Recipes</div>
								</div>
								<div class="stat">
									<div class="stat-number">{cuisines.length}</div>
									<div class="stat-label">Cuisines</div>
								</div>
								<div class="stat">
									<div class="stat-number">{cookingPosts.filter(p => p.data.difficulty === 'easy').length}</div>
									<div class="stat-label">Easy Recipes</div>
								</div>
								<div class="stat">
									<div class="stat-number">{featuredRecipes.length}</div>
									<div class="stat-label">Featured</div>
								</div>
							</div>
						)}
						
						<div class="hero-actions animate-fade-in">
							<a href="#featured" class="btn btn-primary btn-lg">
								<span>Explore Recipes</span>
								<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
									<path d="m9 18 6-6-6-6"/>
								</svg>
							</a>
							<a href="/blog" class="btn btn-secondary btn-lg">
								<span>All Posts</span>
								<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
									<path d="M19 14l-7 7m0 0l-7-7m7 7V3"/>
								</svg>
							</a>
						</div>
					</div>
					
					<div class="hero-visual animate-float">
						<div class="recipe-showcase">
							<div class="recipe-card-preview">
								<div class="recipe-image-placeholder">
									<span class="recipe-icon">🍳</span>
								</div>
								<div class="recipe-details">
									<h3 class="recipe-name">Homemade Pasta</h3>
									<div class="recipe-tags">
										<span class="tag featured">⭐ Featured</span>
										<span class="tag difficulty">Easy</span>
									</div>
									<div class="recipe-info">
										<div class="info-item">
											<span class="icon">⏱️</span>
											<span>30 mins</span>
										</div>
										<div class="info-item">
											<span class="icon">👥</span>
											<span>Serves 4</span>
										</div>
										<div class="info-item">
											<span class="icon">🌍</span>
											<span>Italian</span>
										</div>
									</div>
								</div>
							</div>
							
							<div class="floating-ingredients">
								<div class="ingredient">🍅</div>
								<div class="ingredient">🧄</div>
								<div class="ingredient">🧀</div>
								<div class="ingredient">🌿</div>
							</div>
						</div>
					</div>
				</div>
			</section>

			<!-- Filter Section -->
			{(cuisines.length > 0 || mealTypes.length > 0) && (
				<section class="filters">
					<div class="container">
						<div class="filter-group">
							<h3 class="filter-title">Filter by Cuisine</h3>
							<div class="filter-tags">
								{cuisines.map(cuisine => (
									<span class="filter-tag cuisine-tag">{cuisine}</span>
								))}
							</div>
						</div>
						
						{mealTypes.length > 0 && (
							<div class="filter-group">
								<h3 class="filter-title">Meal Type</h3>
								<div class="filter-tags">
									{mealTypes.map(type => (
										<span class="filter-tag meal-tag">{type}</span>
									))}
								</div>
							</div>
						)}
						
						<div class="filter-group">
							<h3 class="filter-title">Difficulty</h3>
							<div class="filter-tags">
								{difficulties.map(difficulty => (
									<span class="filter-tag difficulty-tag" data-difficulty={difficulty}>
										{difficulty}
									</span>
								))}
							</div>
						</div>
					</div>
				</section>
			)}

			<!-- Featured Recipes Section -->
			{featuredRecipes.length > 0 && (
				<section class="featured" id="featured">
					<div class="container">
						<div class="section-header">
							<h2 class="section-title">Featured Recipes</h2>
							<p class="section-description">
								My favorite recipes that I'm most proud of - tried, tested, and perfected
							</p>
						</div>
						
						<div class="recipes-grid">
							{featuredRecipes.map((recipe) => (
								<article class="recipe-card card">
									<a href={`/blog/${recipe.id}/`} class="recipe-link">
										{recipe.data.heroImage && (
											<div class="recipe-image">
												<img src={recipe.data.heroImage} alt={recipe.data.title} loading="lazy" />
												<div class="recipe-overlay">
													<div class="recipe-badges">
														<span class="recipe-badge featured">⭐ Featured</span>
														{recipe.data.difficulty && (
															<span class={`recipe-badge difficulty ${recipe.data.difficulty}`}>
																{recipe.data.difficulty}
															</span>
														)}
													</div>
												</div>
											</div>
										)}
										<div class="recipe-content">
											<h3 class="recipe-title">{recipe.data.title}</h3>
											<p class="recipe-description">{recipe.data.description}</p>
											
											<div class="recipe-meta">
												<div class="meta-item">
													<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
														<circle cx="12" cy="12" r="10"/>
														<polyline points="12,6 12,12 16,14"/>
													</svg>
													<span>{recipe.data.prepTime ? `${recipe.data.prepTime}min prep` : 'Quick prep'}</span>
												</div>
												{recipe.data.servings && (
													<div class="meta-item">
														<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
															<path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"/>
															<circle cx="9" cy="7" r="4"/>
															<path d="M22 21v-2a4 4 0 0 0-3-3.87"/>
															<path d="M16 3.13a4 4 0 0 1 0 7.75"/>
														</svg>
														<span>Serves {recipe.data.servings}</span>
													</div>
												)}
												{recipe.data.cuisine && (
													<div class="meta-item">
														<span class="cuisine-flag">{recipe.data.cuisine}</span>
													</div>
												)}
											</div>
										</div>
									</a>
								</article>
							))}
						</div>
					</div>
				</section>
			)}

			<!-- All Recipes Section -->
			<section class="all-recipes">
				<div class="container">
					<div class="section-header">
						<h2 class="section-title">All Recipes</h2>
						<p class="section-description">
							Every delicious creation from my kitchen to yours
						</p>
					</div>
					
					{regularRecipes.length > 0 ? (
						<div class="recipes-grid">
							{regularRecipes.map((recipe) => (
								<article class="recipe-card card">
									<a href={`/blog/${recipe.id}/`} class="recipe-link">
										{recipe.data.heroImage && (
											<div class="recipe-image">
												<img src={recipe.data.heroImage} alt={recipe.data.title} loading="lazy" />
												<div class="recipe-overlay">
													<div class="recipe-badges">
														{recipe.data.difficulty && (
															<span class={`recipe-badge difficulty ${recipe.data.difficulty}`}>
																{recipe.data.difficulty}
															</span>
														)}
														{recipe.data.mealType && (
															<span class="recipe-badge meal-type">
																{recipe.data.mealType}
															</span>
														)}
													</div>
												</div>
											</div>
										)}
										<div class="recipe-content">
											<h3 class="recipe-title">{recipe.data.title}</h3>
											<p class="recipe-description">{recipe.data.description}</p>
											
											<div class="recipe-meta">
												<div class="meta-item">
													<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
														<circle cx="12" cy="12" r="10"/>
														<polyline points="12,6 12,12 16,14"/>
													</svg>
													<span>{recipe.data.prepTime ? `${recipe.data.prepTime}min prep` : 'Quick prep'}</span>
												</div>
												{recipe.data.servings && (
													<div class="meta-item">
														<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
															<path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"/>
															<circle cx="9" cy="7" r="4"/>
															<path d="M22 21v-2a4 4 0 0 0-3-3.87"/>
															<path d="M16 3.13a4 4 0 0 1 0 7.75"/>
														</svg>
														<span>Serves {recipe.data.servings}</span>
													</div>
												)}
												{recipe.data.cuisine && (
													<div class="meta-item">
														<span class="cuisine-flag">{recipe.data.cuisine}</span>
													</div>
												)}
											</div>
										</div>
									</a>
								</article>
							))}
						</div>
					) : cookingPosts.length === 0 ? (
						<div class="empty-state">
							<div class="empty-icon">👨‍🍳</div>
							<h3 class="empty-title">No recipes yet</h3>
							<p class="empty-description">
								Delicious recipes will appear here once they're published. 
								Stay tuned for some amazing culinary adventures!
							</p>
						</div>
					) : null}
				</div>
			</section>

			<!-- Call to Action Section -->
			<section class="cta">
				<div class="container">
					<div class="cta-content">
						<div class="cta-text">
							<h2 class="cta-title">Ready to cook something amazing?</h2>
							<p class="cta-description">
								Discover more recipes and cooking tips on my blog. Let's create something delicious together!
							</p>
						</div>
						<div class="cta-actions">
							<a href="/blog" class="btn btn-primary btn-lg">
								<span>Explore More</span>
								<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
									<path d="m9 18 6-6-6-6"/>
								</svg>
							</a>
						</div>
					</div>
				</div>
			</section>
		</main>
		
		<Footer />
	</body>
</html> 