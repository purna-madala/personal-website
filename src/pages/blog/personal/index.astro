---
import BaseHead from '../../../components/BaseHead.astro';
import Header from '../../../components/Header.astro';
import Footer from '../../../components/Footer.astro';
import CategoryFilter from '../../../components/blog/CategoryFilter.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../../components/FormattedDate.astro';

const personalPosts = (await getCollection('personal')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const featuredPosts = personalPosts.filter(post => post.data.featured);
const regularPosts = personalPosts.filter(post => !post.data.featured);
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={`Personal Blog - ${SITE_TITLE}`} description="Personal thoughts, career journey, and life updates" />
		<style>
			main {
				width: 960px;
			}
			
			.page-header {
				margin-bottom: 2rem;
				text-align: center;
			}
			
			.page-title {
				font-size: 2.5rem;
				font-weight: 700;
				margin-bottom: 0.5rem;
				color: #1f2937;
			}
			
			.page-subtitle {
				font-size: 1.125rem;
				color: #6b7280;
				margin-bottom: 2rem;
			}
			
			.featured-section {
				margin-bottom: 3rem;
			}
			
			.section-title {
				font-size: 1.5rem;
				font-weight: 600;
				margin-bottom: 1.5rem;
				color: #1f2937;
				display: flex;
				align-items: center;
				gap: 0.5rem;
			}
			
			.posts-grid {
				display: grid;
				grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
				gap: 1.5rem;
			}
			
			.blog-card {
				background: white;
				border-radius: 12px;
				overflow: hidden;
				box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
				transition: transform 0.2s ease, box-shadow 0.2s ease;
				border-left: 4px solid #3b82f6;
			}
			
			.blog-card:hover {
				transform: translateY(-4px);
				box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
			}
			
			.blog-card a {
				text-decoration: none;
				color: inherit;
				display: block;
			}
			
			.card-image {
				aspect-ratio: 16/10;
				overflow: hidden;
				position: relative;
			}
			
			.card-image img {
				width: 100%;
				height: 100%;
				object-fit: cover;
				transition: transform 0.2s ease;
			}
			
			.blog-card:hover .card-image img {
				transform: scale(1.05);
			}
			
			.featured-badge {
				position: absolute;
				top: 12px;
				right: 12px;
				background-color: #f59e0b;
				color: white;
				padding: 6px 12px;
				border-radius: 6px;
				font-size: 0.75rem;
				font-weight: 600;
				text-transform: uppercase;
			}
			
			.card-content {
				padding: 1.5rem;
			}
			
			.card-title {
				margin: 0 0 0.5rem 0;
				font-size: 1.25rem;
				font-weight: 600;
				line-height: 1.3;
				color: #1f2937;
			}
			
			.card-description {
				margin: 0 0 1rem 0;
				color: #6b7280;
				line-height: 1.5;
				font-size: 0.9rem;
			}
			
			.card-meta {
				display: flex;
				justify-content: space-between;
				align-items: center;
				margin-top: 1rem;
			}
			
			.card-date {
				margin: 0;
				color: #9ca3af;
				font-size: 0.875rem;
			}
			
			.card-tags {
				display: flex;
				gap: 0.5rem;
				flex-wrap: wrap;
			}
			
			.tag {
				padding: 0.25rem 0.5rem;
				background-color: #eff6ff;
				color: #1d4ed8;
				border-radius: 4px;
				font-size: 0.75rem;
				font-weight: 500;
			}
			
			.empty-state {
				text-align: center;
				padding: 3rem 1rem;
				color: #6b7280;
			}
			
			.empty-state h3 {
				font-size: 1.25rem;
				margin-bottom: 0.5rem;
				color: #374151;
			}
			
			@media (max-width: 720px) {
				.page-title {
					font-size: 2rem;
				}
				
				.posts-grid {
					grid-template-columns: 1fr;
					gap: 1rem;
				}
				
				.card-content {
					padding: 1rem;
				}
				
				.card-meta {
					flex-direction: column;
					align-items: flex-start;
					gap: 0.5rem;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<CategoryFilter currentCategory="personal" />
			
			<div class="page-header">
				<h1 class="page-title">üë®‚Äçüíª Personal Blog</h1>
				<p class="page-subtitle">Thoughts on coding, career, and life journey</p>
			</div>
			
			{featuredPosts.length > 0 && (
				<section class="featured-section">
					<h2 class="section-title">
						<span>‚≠ê</span>
						Featured Posts
					</h2>
					<div class="posts-grid">
						{featuredPosts.map((post) => (
							<article class="blog-card">
								<a href={`/blog/${post.id}/`}>
									{post.data.heroImage && (
										<div class="card-image">
											<img src={post.data.heroImage} alt={post.data.title} loading="lazy" />
											<span class="featured-badge">Featured</span>
										</div>
									)}
									<div class="card-content">
										<h3 class="card-title">{post.data.title}</h3>
										<p class="card-description">{post.data.description}</p>
										<div class="card-meta">
											<p class="card-date">
												<FormattedDate date={post.data.pubDate} />
											</p>
											{post.data.tags && post.data.tags.length > 0 && (
												<div class="card-tags">
													{post.data.tags.slice(0, 3).map(tag => (
														<span class="tag">{tag}</span>
													))}
												</div>
											)}
										</div>
									</div>
								</a>
							</article>
						))}
					</div>
				</section>
			)}
			
			<section>
				<h2 class="section-title">
					<span>üìù</span>
					All Personal Posts
				</h2>
				{regularPosts.length > 0 ? (
					<div class="posts-grid">
						{regularPosts.map((post) => (
							<article class="blog-card">
								<a href={`/blog/${post.id}/`}>
									{post.data.heroImage && (
										<div class="card-image">
											<img src={post.data.heroImage} alt={post.data.title} loading="lazy" />
										</div>
									)}
									<div class="card-content">
										<h3 class="card-title">{post.data.title}</h3>
										<p class="card-description">{post.data.description}</p>
										<div class="card-meta">
											<p class="card-date">
												<FormattedDate date={post.data.pubDate} />
											</p>
											{post.data.tags && post.data.tags.length > 0 && (
												<div class="card-tags">
													{post.data.tags.slice(0, 3).map(tag => (
														<span class="tag">{tag}</span>
													))}
												</div>
											)}
										</div>
									</div>
								</a>
							</article>
						))}
					</div>
				) : (
					<div class="empty-state">
						<h3>No posts yet</h3>
						<p>Personal blog posts will appear here once they're published.</p>
					</div>
				)}
			</section>
		</main>
		<Footer />
	</body>
</html> 